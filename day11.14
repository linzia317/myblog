使用scanf（）进行输入，如果要两次调用scanf函数可能会存在问题
scanf会先检查stdin是否有数据，如果stdin中没有数据，则会等待用户输入
第二次调用scanf时，他的格式串中的第一个格式如果是字符格式，则在第二次调用时只正确读取了第一个输入值

原因：在stdin中遗留了空格符或者换行符的空白符
可以使用getchar（）吸收掉多余的字符解决
或者在scanf（）的格式前多加一个空格

scanf读取是读到空格停止，但是不会跳过空格，第二个scanf又读到空格了然后就死循环了

你可以使用 scanf(" %c",&ch);
来跳过空白字符
也可以使用 scanf("%*c%c",&ch);
读取一个字符并丢弃 再进行真正的读取

scanf可以通过空格来跳过空格，通过\n来跳过换行

java的nextLine()也有一样的问题，会读取上一个next()的\n,然后直接结束


`stdin` 是 "standard input" 的缩写，代表“标准输入”。在计算机科学中，它通常指程序接收输入的默认方式，比如从键盘接收用户输入。标准输入是操作系统中一类输入流的概念，常用于与程序进行交互。

通常情况下，`stdin` 与 `stdout`（标准输出）和 `stderr`（标准错误）一起使用：

- **stdin**：程序接收输入的地方（例如用户通过键盘输入或从文件中读取）。
- **stdout**：程序输出正常结果的地方（一般指屏幕或文件）。
- **stderr**：程序输出错误信息的地方。

在编程中，`stdin` 常用于读取用户输入的值。例如，在 Python 中，可以使用 `input()` 函数从标准输入获取用户输入；在 C 中，可以用 `scanf()` 读取标准输入。
